import paypalrestsdk
import logging

# Configure PayPal SDK with your client credentials
paypalrestsdk.configure({
  "mode": "sandbox",  # Use "live" for production environment
  "client_id": "YOUR_CLIENT_ID",
  "client_secret": "YOUR_CLIENT_SECRET" 
})

def create_payment():
    """Create a new PayPal payment."""
    payment = paypalrestsdk.Payment({
        "intent": "sale",  # Indicates the type of transaction
        "payer": {
            "payment_method": "paypal"  # Specifies PayPal as the payment method
        },
        "redirect_urls": {
            # URL where the buyer will be redirected after approval
            "return_url": "http://localhost:3000/payment/execute",
            # URL where the buyer will be redirected if they cancel
            "cancel_url": "http://localhost:3000/"
        },
        "transactions": [{
            "item_list": {
                "items": [{
                    "name": "Sample Item",
                    "sku": "12345",
                    "price": "10.00",
                    "currency": "USD",
                    "quantity": 1
                }]
            },
            "amount": {
                "total": "10.00",  # Total amount of the transaction
                "currency": "USD"  # Currency of the transaction
            },
            "description": "This is the payment transaction description."
        }]
    })

    if payment.create():
        print("Payment created successfully.")
        # Extract the approval URL to redirect the user
        for link in payment.links:
            if link.rel == "approval_url":
                approval_url = link.href
                print("Redirect for approval: %s" % (approval_url))
    else:
        print("Error while creating payment:")
        print(payment.error)

def execute_payment(payment_id, payer_id):
    """Execute the PayPal payment after approval."""
    payment = paypalrestsdk.Payment.find(payment_id)  # Retrieve the payment object
    if payment.execute({"payer_id": payer_id}):
        print("Payment executed successfully.")
    else:
        print("Error while executing payment:")
        print(payment.error)

if __name__ == "__main__":
    # Create a new payment
    create_payment()

    # To execute the payment, you will need the payment ID and payer ID
    # which you get from the return URL after the payer approves the payment.
    # Uncomment the next line and replace with actual IDs for execution
    # execute_payment("PAYMENT_ID", "PAYER_ID")
